{"ast":null,"code":"'use strict';\n\nvar MAX_BATCH_SIZE = 128;\nvar GEO_LIMIT_TYPES = ['withinMiles', 'withinKilometers', 'withinRadians', 'withinDegrees'];\nvar SYNC_TIMEOUT = 360000; // 6 minutes\nvar MODEL_QUEUED_FOR_TRAINING = '21103';\nvar MODEL_TRAINING = '21101';\nvar POLLTIME = 2000;\nmodule.exports = {\n  API: {\n    TOKEN_PATH: '/token',\n    MODELS_PATH: '/models',\n    MODEL_PATH: '/models/$0',\n    MODEL_VERSIONS_PATH: '/models/$0/versions',\n    MODEL_VERSION_PATH: '/models/$0/versions/$1',\n    MODEL_PATCH_PATH: '/models/$0/output_info/data/concepts',\n    MODEL_OUTPUT_PATH: '/models/$0/output_info',\n    MODEL_VERSION_OUTPUT_PATH: '/models/$0/versions/$1/output_info',\n    MODEL_SEARCH_PATH: '/models/searches',\n    MODEL_FEEDBACK_PATH: '/models/$0/feedback',\n    MODEL_VERSION_FEEDBACK_PATH: '/models/$0/versions/$1/feedback',\n    PREDICT_PATH: '/models/$0/outputs',\n    VERSION_PREDICT_PATH: '/models/$0/versions/$1/outputs',\n    CONCEPTS_PATH: '/concepts',\n    CONCEPT_PATH: '/concepts/$0',\n    CONCEPT_SEARCH_PATH: '/concepts/searches',\n    MODEL_INPUTS_PATH: '/models/$0/inputs',\n    MODEL_VERSION_INPUTS_PATH: '/models/$0/versions/$1/inputs',\n    MODEL_VERSION_METRICS_PATH: '/models/$0/versions/$1/metrics',\n    INPUTS_PATH: '/inputs',\n    INPUT_PATH: '/inputs/$0',\n    INPUTS_STATUS_PATH: '/inputs/status',\n    SEARCH_PATH: '/searches',\n    SEARCH_FEEDBACK_PATH: '/searches/feedback',\n    WORKFLOWS_PATH: '/workflows',\n    WORKFLOW_PATH: '/workflows/$0',\n    WORKFLOW_RESULTS_PATH: '/workflows/$0/results'\n  },\n  ERRORS: {\n    paramsRequired: function paramsRequired(param) {\n      var paramList = Array.isArray(param) ? param : [param];\n      return new Error('The following ' + (paramList.length > 1 ? 'params are' : 'param is') + ' required: ' + paramList.join(', '));\n    },\n    MAX_INPUTS: new Error('Number of inputs passed exceeded max of ' + MAX_BATCH_SIZE),\n    INVALID_GEOLIMIT_TYPE: new Error('Incorrect geo_limit type. Value must be any of the following: ' + GEO_LIMIT_TYPES.join(', ')),\n    INVALID_DELETE_ARGS: new Error('Wrong arguments passed. You can only delete all models (provide no arguments), delete select models (provide list of ids),\\n    delete a single model (providing a single id) or delete a model version (provide a single id and version id)')\n  },\n  STATUS: {\n    MODEL_QUEUED_FOR_TRAINING: MODEL_QUEUED_FOR_TRAINING,\n    MODEL_TRAINING: MODEL_TRAINING\n  },\n  // var replacement must be given in order\n  replaceVars: function replaceVars(path) {\n    var vars = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    var newPath = path;\n    vars.forEach(function (val, index) {\n      if (index === 0) {\n        val = encodeURIComponent(val);\n      }\n      newPath = newPath.replace(new RegExp('\\\\$' + index, 'g'), val);\n    });\n    return newPath;\n  },\n  getBasePath: function getBasePath() {\n    var apiEndpoint = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'https://api.clarifai.com';\n    var userId = arguments[1];\n    var appId = arguments[2];\n    if (!userId || !appId) {\n      return apiEndpoint + '/v2';\n    }\n    return apiEndpoint + '/v2/users/' + userId + '/apps/' + appId;\n  },\n  GEO_LIMIT_TYPES: GEO_LIMIT_TYPES,\n  MAX_BATCH_SIZE: MAX_BATCH_SIZE,\n  SYNC_TIMEOUT: SYNC_TIMEOUT,\n  POLLTIME: POLLTIME\n};","map":{"version":3,"names":["MAX_BATCH_SIZE","GEO_LIMIT_TYPES","SYNC_TIMEOUT","MODEL_QUEUED_FOR_TRAINING","MODEL_TRAINING","POLLTIME","module","exports","API","TOKEN_PATH","MODELS_PATH","MODEL_PATH","MODEL_VERSIONS_PATH","MODEL_VERSION_PATH","MODEL_PATCH_PATH","MODEL_OUTPUT_PATH","MODEL_VERSION_OUTPUT_PATH","MODEL_SEARCH_PATH","MODEL_FEEDBACK_PATH","MODEL_VERSION_FEEDBACK_PATH","PREDICT_PATH","VERSION_PREDICT_PATH","CONCEPTS_PATH","CONCEPT_PATH","CONCEPT_SEARCH_PATH","MODEL_INPUTS_PATH","MODEL_VERSION_INPUTS_PATH","MODEL_VERSION_METRICS_PATH","INPUTS_PATH","INPUT_PATH","INPUTS_STATUS_PATH","SEARCH_PATH","SEARCH_FEEDBACK_PATH","WORKFLOWS_PATH","WORKFLOW_PATH","WORKFLOW_RESULTS_PATH","ERRORS","paramsRequired","param","paramList","Array","isArray","Error","length","join","MAX_INPUTS","INVALID_GEOLIMIT_TYPE","INVALID_DELETE_ARGS","STATUS","replaceVars","path","vars","arguments","undefined","newPath","forEach","val","index","encodeURIComponent","replace","RegExp","getBasePath","apiEndpoint","userId","appId"],"sources":["/workspace/smartBrain/smartBrain/node_modules/clarifai/dist/constants.js"],"sourcesContent":["'use strict';\n\nvar MAX_BATCH_SIZE = 128;\nvar GEO_LIMIT_TYPES = ['withinMiles', 'withinKilometers', 'withinRadians', 'withinDegrees'];\nvar SYNC_TIMEOUT = 360000; // 6 minutes\nvar MODEL_QUEUED_FOR_TRAINING = '21103';\nvar MODEL_TRAINING = '21101';\nvar POLLTIME = 2000;\n\nmodule.exports = {\n  API: {\n    TOKEN_PATH: '/token',\n    MODELS_PATH: '/models',\n    MODEL_PATH: '/models/$0',\n    MODEL_VERSIONS_PATH: '/models/$0/versions',\n    MODEL_VERSION_PATH: '/models/$0/versions/$1',\n    MODEL_PATCH_PATH: '/models/$0/output_info/data/concepts',\n    MODEL_OUTPUT_PATH: '/models/$0/output_info',\n    MODEL_VERSION_OUTPUT_PATH: '/models/$0/versions/$1/output_info',\n    MODEL_SEARCH_PATH: '/models/searches',\n    MODEL_FEEDBACK_PATH: '/models/$0/feedback',\n    MODEL_VERSION_FEEDBACK_PATH: '/models/$0/versions/$1/feedback',\n    PREDICT_PATH: '/models/$0/outputs',\n    VERSION_PREDICT_PATH: '/models/$0/versions/$1/outputs',\n    CONCEPTS_PATH: '/concepts',\n    CONCEPT_PATH: '/concepts/$0',\n    CONCEPT_SEARCH_PATH: '/concepts/searches',\n    MODEL_INPUTS_PATH: '/models/$0/inputs',\n    MODEL_VERSION_INPUTS_PATH: '/models/$0/versions/$1/inputs',\n    MODEL_VERSION_METRICS_PATH: '/models/$0/versions/$1/metrics',\n    INPUTS_PATH: '/inputs',\n    INPUT_PATH: '/inputs/$0',\n    INPUTS_STATUS_PATH: '/inputs/status',\n    SEARCH_PATH: '/searches',\n    SEARCH_FEEDBACK_PATH: '/searches/feedback',\n    WORKFLOWS_PATH: '/workflows',\n    WORKFLOW_PATH: '/workflows/$0',\n    WORKFLOW_RESULTS_PATH: '/workflows/$0/results'\n  },\n  ERRORS: {\n    paramsRequired: function paramsRequired(param) {\n      var paramList = Array.isArray(param) ? param : [param];\n      return new Error('The following ' + (paramList.length > 1 ? 'params are' : 'param is') + ' required: ' + paramList.join(', '));\n    },\n    MAX_INPUTS: new Error('Number of inputs passed exceeded max of ' + MAX_BATCH_SIZE),\n    INVALID_GEOLIMIT_TYPE: new Error('Incorrect geo_limit type. Value must be any of the following: ' + GEO_LIMIT_TYPES.join(', ')),\n    INVALID_DELETE_ARGS: new Error('Wrong arguments passed. You can only delete all models (provide no arguments), delete select models (provide list of ids),\\n    delete a single model (providing a single id) or delete a model version (provide a single id and version id)')\n  },\n  STATUS: {\n    MODEL_QUEUED_FOR_TRAINING: MODEL_QUEUED_FOR_TRAINING,\n    MODEL_TRAINING: MODEL_TRAINING\n  },\n  // var replacement must be given in order\n  replaceVars: function replaceVars(path) {\n    var vars = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    var newPath = path;\n    vars.forEach(function (val, index) {\n      if (index === 0) {\n        val = encodeURIComponent(val);\n      }\n      newPath = newPath.replace(new RegExp('\\\\$' + index, 'g'), val);\n    });\n    return newPath;\n  },\n  getBasePath: function getBasePath() {\n    var apiEndpoint = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'https://api.clarifai.com';\n    var userId = arguments[1];\n    var appId = arguments[2];\n\n    if (!userId || !appId) {\n      return apiEndpoint + '/v2';\n    }\n    return apiEndpoint + '/v2/users/' + userId + '/apps/' + appId;\n  },\n  GEO_LIMIT_TYPES: GEO_LIMIT_TYPES,\n  MAX_BATCH_SIZE: MAX_BATCH_SIZE,\n  SYNC_TIMEOUT: SYNC_TIMEOUT,\n  POLLTIME: POLLTIME\n};"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}