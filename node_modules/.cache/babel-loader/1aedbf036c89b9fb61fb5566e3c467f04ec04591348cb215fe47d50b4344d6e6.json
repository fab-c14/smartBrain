{"ast":null,"code":"var _jsxFileName = \"/workspace/smartBrain/src/App.js\";\nimport React, { Component } from 'react';\n// import Particles from 'react-particles-js';\nimport ParticlesBg from 'particles-bg';\nimport Clarifai, { FACE_DETECT_MODEL } from 'clarifai';\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\nimport Navigation from './Components/Navigation/Navigation';\nimport SignIn from './Components/SignIn';\nimport Logo from './Components/Logo/Logo';\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\nimport Rank from './Components/Rank/Rank';\nimport './App.css';\nimport 'tachyons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = new Clarifai.App({\n  apiKey: '25081218e2ef4b818d5d2f8bb51566e9'\n});\nclass App extends Component {\n  constructor() {\n    super();\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      console.log(width, height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n    this.displayFaceBox = box => {\n      console.log(box);\n      this.setState({\n        box: box\n      });\n    };\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n    this.onButtonSubmit = () => {\n      // Set the imageUrl state to the input value\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict('face-detection', this.state.input).then(response => {\n        // Handle the response here, which should contain face detection data\n        console.log(response);\n        // Display the face bounding box\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(error => {\n        // Handle any errors here, including the \"Method not allowed\" error\n        console.log(error);\n      });\n    };\n    this.state = {\n      input: \"\",\n      imageUrl: \"\",\n      box: {} // contains values we received\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(ParticlesBg, {\n        type: \"cobweb\",\n        bg: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(SignIn, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n        imageUrl: this.state.imageUrl,\n        box: this.state.box\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","ParticlesBg","Clarifai","FACE_DETECT_MODEL","FaceRecognition","Navigation","SignIn","Logo","ImageLinkForm","Rank","jsxDEV","_jsxDEV","app","App","apiKey","constructor","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","console","log","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","setState","onInputChange","event","input","target","value","onButtonSubmit","imageUrl","state","models","predict","then","response","catch","error","render","className","children","type","bg","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/workspace/smartBrain/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\r\n// import Particles from 'react-particles-js';\r\nimport ParticlesBg from 'particles-bg'\r\nimport Clarifai,{FACE_DETECT_MODEL} from 'clarifai';\r\nimport FaceRecognition from './Components/FaceRecognition/FaceRecognition';\r\nimport Navigation from './Components/Navigation/Navigation';\r\nimport SignIn from './Components/SignIn';\r\nimport Logo from './Components/Logo/Logo';\r\nimport ImageLinkForm from './Components/ImageLinkForm/ImageLinkForm';\r\nimport Rank from './Components/Rank/Rank';\r\nimport './App.css';\r\nimport 'tachyons'\r\n\r\nconst app = new Clarifai.App({\r\n apiKey:'25081218e2ef4b818d5d2f8bb51566e9'\r\n});\r\n\r\nclass App extends Component{\r\n constructor(){\r\n super();\r\n this.state = {\r\n  input:\"\",\r\n  imageUrl:\"\",\r\n  box:{}// contains values we received\r\n }\r\n }\r\n\r\n calculateFaceLocation = (data) => {\r\n \tconst clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\r\n \tconst image = document.getElementById('inputimage');\r\n \tconst width = Number(image.width);\r\n \tconst height = Number(image.height);\r\n \tconsole.log(width, height);\r\n \treturn {\r\n \tleftCol: clarifaiFace.left_col * width,\r\n \ttopRow: clarifaiFace.top_row * height,\r\n \trightCol: width - (clarifaiFace.right_col * width),\r\n \tbottomRow: height - (clarifaiFace.bottom_row * height),\r\n };\r\n}\r\n\r\n displayFaceBox = (box)=>{\r\n\tconsole.log(box);\r\n \tthis.setState({box:box});\r\n }\r\n\r\n onInputChange = (event)=>{\r\n\r\n \tthis.setState({input:event.target.value});\r\n }\r\n\r\nonButtonSubmit = () => {\r\n  // Set the imageUrl state to the input value\r\n  this.setState({ imageUrl: this.state.input });\r\n\r\n  app.models\r\n    .predict('face-detection',this.state.input)\r\n    .then(response => {\r\n      // Handle the response here, which should contain face detection data\r\n      console.log(response);\r\n      // Display the face bounding box\r\n      this.displayFaceBox(this.calculateFaceLocation(response));\r\n    })\r\n    .catch(error => {\r\n      // Handle any errors here, including the \"Method not allowed\" error\r\n      console.log(error);\r\n    });\r\n}\r\n\r\n render(){\r\n   return(\r\n    <div className=\"App\">\r\n      <ParticlesBg type='cobweb' bg={true} />\r\n      <Navigation/>\r\n      <SignIn />\r\n      <Logo />\r\n      <Rank />\r\n      <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit}/>\r\n      <FaceRecognition imageUrl={this.state.imageUrl} box={this.state.box}/>\r\n \r\n    </div>\r\n   )\r\n }\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC;AACA,OAAOC,WAAW,MAAM,cAAc;AACtC,OAAOC,QAAQ,IAAEC,iBAAiB,QAAO,UAAU;AACnD,OAAOC,eAAe,MAAM,8CAA8C;AAC1E,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,aAAa,MAAM,0CAA0C;AACpE,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAO,WAAW;AAClB,OAAO,UAAU;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjB,MAAMC,GAAG,GAAG,IAAIV,QAAQ,CAACW,GAAG,CAAC;EAC5BC,MAAM,EAAC;AACR,CAAC,CAAC;AAEF,MAAMD,GAAG,SAASb,SAAS;EAC1Be,WAAWA,CAAA,EAAE;IACb,KAAK,EAAE;IAAC,KAQRC,qBAAqB,GAAIC,IAAI,IAAK;MACjC,MAAMC,YAAY,GAAGD,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,CAACF,IAAI,CAACG,OAAO,CAAC,CAAC,CAAC,CAACC,WAAW,CAACC,YAAY;MAC7E,MAAMC,KAAK,GAAGC,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC;MACnD,MAAMC,KAAK,GAAGC,MAAM,CAACJ,KAAK,CAACG,KAAK,CAAC;MACjC,MAAME,MAAM,GAAGD,MAAM,CAACJ,KAAK,CAACK,MAAM,CAAC;MACnCC,OAAO,CAACC,GAAG,CAACJ,KAAK,EAAEE,MAAM,CAAC;MAC1B,OAAO;QACPG,OAAO,EAAEb,YAAY,CAACc,QAAQ,GAAGN,KAAK;QACtCO,MAAM,EAAEf,YAAY,CAACgB,OAAO,GAAGN,MAAM;QACrCO,QAAQ,EAAET,KAAK,GAAIR,YAAY,CAACkB,SAAS,GAAGV,KAAM;QAClDW,SAAS,EAAET,MAAM,GAAIV,YAAY,CAACoB,UAAU,GAAGV;MAChD,CAAC;IACF,CAAC;IAAA,KAEAW,cAAc,GAAIC,GAAG,IAAG;MACxBX,OAAO,CAACC,GAAG,CAACU,GAAG,CAAC;MACf,IAAI,CAACC,QAAQ,CAAC;QAACD,GAAG,EAACA;MAAG,CAAC,CAAC;IACzB,CAAC;IAAA,KAEDE,aAAa,GAAIC,KAAK,IAAG;MAExB,IAAI,CAACF,QAAQ,CAAC;QAACG,KAAK,EAACD,KAAK,CAACE,MAAM,CAACC;MAAK,CAAC,CAAC;IAC1C,CAAC;IAAA,KAEFC,cAAc,GAAG,MAAM;MACrB;MACA,IAAI,CAACN,QAAQ,CAAC;QAAEO,QAAQ,EAAE,IAAI,CAACC,KAAK,CAACL;MAAM,CAAC,CAAC;MAE7ChC,GAAG,CAACsC,MAAM,CACPC,OAAO,CAAC,gBAAgB,EAAC,IAAI,CAACF,KAAK,CAACL,KAAK,CAAC,CAC1CQ,IAAI,CAACC,QAAQ,IAAI;QAChB;QACAxB,OAAO,CAACC,GAAG,CAACuB,QAAQ,CAAC;QACrB;QACA,IAAI,CAACd,cAAc,CAAC,IAAI,CAACvB,qBAAqB,CAACqC,QAAQ,CAAC,CAAC;MAC3D,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;QACd;QACA1B,OAAO,CAACC,GAAG,CAACyB,KAAK,CAAC;MACpB,CAAC,CAAC;IACN,CAAC;IA/CA,IAAI,CAACN,KAAK,GAAG;MACZL,KAAK,EAAC,EAAE;MACRI,QAAQ,EAAC,EAAE;MACXR,GAAG,EAAC,CAAC,CAAC;IACP,CAAC;EACD;;EA4CAgB,MAAMA,CAAA,EAAE;IACN,oBACC7C,OAAA;MAAK8C,SAAS,EAAC,KAAK;MAAAC,QAAA,gBAClB/C,OAAA,CAACV,WAAW;QAAC0D,IAAI,EAAC,QAAQ;QAACC,EAAE,EAAE;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACvCrD,OAAA,CAACN,UAAU;QAAAwD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,eACbrD,OAAA,CAACL,MAAM;QAAAuD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACVrD,OAAA,CAACJ,IAAI;QAAAsD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACRrD,OAAA,CAACF,IAAI;QAAAoD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACRrD,OAAA,CAACH,aAAa;QAACkC,aAAa,EAAE,IAAI,CAACA,aAAc;QAACK,cAAc,EAAE,IAAI,CAACA;MAAe;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,eACxFrD,OAAA,CAACP,eAAe;QAAC4C,QAAQ,EAAE,IAAI,CAACC,KAAK,CAACD,QAAS;QAACR,GAAG,EAAE,IAAI,CAACS,KAAK,CAACT;MAAI;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAElE;EAET;AACD;AAEA,eAAenD,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}